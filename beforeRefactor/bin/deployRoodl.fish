#!/usr/bin/env fish

function cleanup --on-signal SIGINT
    echo -e "\nüëã –õ–∞–¥–Ω–æ, –±—Ä–∞—Ç–∞–Ω, –≤ –¥—Ä—É–≥–æ–π —Ä–∞–∑!"
    exit 1
end

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–æ–≤
function get_projects
    echo '{
        "docs": {
            "bucket": "docs.rolder.app",
            "icon": "üìã"
        },
        "playground": {
            "bucket": "playground",
            "icon": "üéÆ"
        }
    }' | jq .
end

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞
function ensure_project_dir -a project_name
    set base_dir "$HOME/deployRoodl"
    set project_dir "$base_dir/$project_name"

    if not test -d "$base_dir"
        mkdir -p "$base_dir"
    end
    if not test -d "$project_dir"
        mkdir -p "$project_dir"
    end
    echo "$project_dir"
end

function deployRoodl
    # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ–µ–∫—Ç—ã –∏ —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –¥–ª—è –≤—ã–±–æ—Ä–∞
    set projects (get_projects)
    set choices (echo $projects | jq -r 'to_entries | .[] | .value.icon + " " + .key + " ü™£ " + .value.bucket')

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º fzf –¥–ª—è –≤—ã–±–æ—Ä–∞
    set selected (printf '%s\n' $choices | fzf --prompt="üöÄ –í—ã–±–µ—Ä–∏ –ø—Ä–æ–µ–∫—Ç –¥–ª—è –¥–µ–ø–ª–æ—è: ")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ –Ω–∞ —ç—Ç–∞–ø–µ –≤—ã–±–æ—Ä–∞
    if test $status -eq 130
        return 1
    end

    if test -z "$selected"
        echo "‚ùå –ë—Ä–∞—Ç–∞–Ω, –Ω–∞–¥–æ –≤—ã–±—Ä–∞—Ç—å –ø—Ä–æ–µ–∫—Ç!"
        return 1
    end

    # –ü–∞—Ä—Å–∏–º –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
    set project_name (echo $selected | awk '{print $2}')
    set bucket (echo $projects | jq -r ".[\"$project_name\"].bucket")

    # –°–æ–∑–¥–∞—ë–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –¥–µ–ø–ª–æ—è
    set deploy_dir (ensure_project_dir $project_name)
    echo -e "\nüìÅ –ü–∞–ø–∫–∞ –¥–ª—è –¥–µ–ø–ª–æ—è: $deploy_dir"

    # –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
    while true
        echo -e "\n–ó–∞–∫–∏–Ω—å —Ñ–∞–π–ª—ã –∏ –∂–º–∞–∫–Ω–∏ Enter –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ (Ctrl+C –¥–ª—è –æ—Ç–º–µ–Ω—ã)"
        read input

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ –Ω–∞ —ç—Ç–∞–ø–µ –æ–∂–∏–¥–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤
        if test $status -eq 1
            return 1
        end

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º index.html
        if not test -f "$deploy_dir/index.html"
            echo -e "\n‚ùå index.html –Ω–µ –Ω–∞–π–¥–µ–Ω! –ü–æ–ø—Ä–æ–±—É–µ–º –µ—â—ë —Ä–∞–∑?"
            continue
        end

        set files_count (find $deploy_dir -type f | wc -l)
        echo -e "\nüì¶ –ù–∞—à—ë–ª $files_count —Ñ–∞–π–ª–æ–≤, –≤–∫–ª—é—á–∞—è index.html"

        cd $deploy_dir
        echo -e "\nüöÄ –ü–æ–≥–Ω–∞–ª–∏ –∑–∞–≥—Ä—É–∂–∞—Ç—å $files_count —Ñ–∞–π–ª–æ–≤ –≤ $bucket...\n"

        # –ó–∞–≥—Ä—É–∑–∫–∞ –≤ S3 —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è
        aws s3 cp . "s3://$bucket" --recursive
        set aws_status $status

        if test $aws_status -eq 130
            echo -e "\n‚ùå –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞!"
            return 1
        end

        if test $aws_status -eq 0
            echo -e "\n‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! üéâ"

            # –û—á–∏—â–∞–µ–º –ø–∞–ø–∫—É
            cd ..
            rm -rf $deploy_dir
            mkdir -p $deploy_dir

            if test $status -ne 0
                echo -e "\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –ø–∞–ø–∫–∏!"
                return 1
            end

            echo -e "\nüßπ –ü–∞–ø–∫–∞ –¥–ª—è –¥–µ–ø–ª–æ—è –æ—á–∏—â–µ–Ω–∞\n"
            break
        else
            echo -e "\n‚ùå –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫! –ü–æ–ø—Ä–æ–±—É–µ–º –µ—â—ë —Ä–∞–∑?\n"
            continue
        end
    end
end

# –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é
deployRoodl
