{
  pkgs,
  lib,
  ...
}:
{
  nixpkgs = {
    hostPlatform = lib.mkDefault "x86_64-linux";
    config.allowUnfree = true;
  };

  nix = {
    settings.experimental-features = [
      "nix-command"
      "flakes"
    ];
  };

  console = {
    font = "ter-v32n";
    packages = with pkgs; [ terminus_font ];
    useXkbConfig = true;
  };

  i18n = {
    defaultLocale = "en_US.UTF-8";
    supportedLocales = [
      "en_US.UTF-8/UTF-8"
      "ru_RU.UTF-8/UTF-8"
    ];
    extraLocaleSettings = {
      LC_ADDRESS = "ru_RU.UTF-8";
      LC_IDENTIFICATION = "ru_RU.UTF-8";
      LC_MEASUREMENT = "ru_RU.UTF-8";
      LC_MONETARY = "ru_RU.UTF-8";
      LC_NAME = "ru_RU.UTF-8";
      LC_NUMERIC = "ru_RU.UTF-8";
      LC_PAPER = "ru_RU.UTF-8";
      LC_TELEPHONE = "ru_RU.UTF-8";
      LC_TIME = "ru_RU.UTF-8";
    };
  };

  environment.systemPackages = with pkgs; [
    git
    (writeShellScriptBin "nix_installer" ''
      #!/usr/bin/env bash
      set -euo pipefail

      echo "üõ†Ô∏è –ù–∞—á–∏–Ω–∞—é –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é —É—Å—Ç–∞–Ω–æ–≤–∫—É NixOS..."

      echo "üì° –ü–æ–¥–∫–ª—é—á–∞—é—Å—å –∫ WiFi..."
      read -p "–í–≤–µ–¥–∏ –∏–º—è WiFi —Å–µ—Ç–∏: " SSID
      read -sp "–í–≤–µ–¥–∏ –ø–∞—Ä–æ–ª—å –æ—Ç WiFi: " PASSWORD
      echo ""

      # –ó–∞–ø—É—Å–∫–∞–µ–º wpa_supplicant –µ—Å–ª–∏ –æ–Ω –Ω–µ –∑–∞–ø—É—â–µ–Ω
      sudo systemctl start wpa_supplicant

      # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —Å–µ—Ç–∏
      wpa_cli -i wlp2s0 <<EOF
        add_network
        set_network 0 ssid "$SSID"
        set_network 0 psk "$PASSWORD"
        enable_network 0
        quit
      EOF

      echo "üåê –ü—Ä–æ–≤–µ—Ä—è—é –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É..."
      for i in {1..10}; do
        if ping -c 1 ya.ru &>/dev/null; then
          echo "‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!"
          break
        fi
        echo "‚è≥ –ñ–¥—É –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è... ($i/10)"
        sleep 2
        if [ $i -eq 10 ]; then
          echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É. –í—ã—Ö–æ–¥."
          exit 1
        fi
      done

      echo "üíæ –§–æ—Ä–º–∞—Ç–∏—Ä—É—é –∏ –º–æ–Ω—Ç–∏—Ä—É—é –¥–∏—Å–∫–∏..."
      sudo nix \
          --experimental-features 'flakes nix-command' \
          run github:nix-community/disko -- \
          -f github:decard2/nix#emerald \
          -m destroy,format,mount

      echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é NixOS..."
      sudo nixos-install --flake github:decard2/nix#emerald

      echo "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ! –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞—é—Å—å —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥..."
      sleep 5
      sudo reboot
    '')
  ];

  # –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ —Å–µ—Å—Å–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è nixos
  system.activationScripts.installerAutostart = ''
    mkdir -p /home/nixos
    cat > /home/nixos/.bash_profile << 'EOF'
    if [[ $(tty) == /dev/tty1 ]]; then
      echo "–ó–∞–ø—É—Å–∫ —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫–∞ NixOS..."
      sleep 2
      exec nix_installer
    fi
    EOF
    chown -R nixos:users /home/nixos
  '';
}
