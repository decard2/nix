import logging
from typing import Optional
import time

class JoraLogger:
    def __init__(self):
        self.formatter = logging.Formatter('%(message)s')
        self.console_handler = logging.StreamHandler()
        self.console_handler.setFormatter(self.formatter)

        self.logger = logging.getLogger('jora')
        self.logger.addHandler(self.console_handler)
        self.logger.setLevel(logging.INFO)

        self._start_time: Optional[float] = None
        self._last_time: Optional[float] = None

    def start_timer(self):
        """–ó–∞–ø—É—Å–∫ —Ç–∞–π–º–µ—Ä–∞"""
        self._start_time = time.time()
        self._last_time = self._start_time

    def log_timing(self, msg: str):
        """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ —Å –Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å–∫–∞"""
        if not self._start_time or not self._last_time:
            return

        current = time.time()
        delta = (current - self._last_time) * 1000
        self._last_time = current

        self.logger.debug(f"‚è±Ô∏è {msg}: {delta:.1f}ms")

    def debug(self, msg: str):
        """–û—Ç–ª–∞–¥–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
        self.logger.debug(f"üîç {msg}")

    def info(self, msg: str):
        """–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
        self.logger.info(msg)

    def error(self, msg: str):
        """–û—à–∏–±–∫–∞"""
        self.logger.error(f"‚ùå {msg}")

    def set_debug(self, enabled: bool):
        """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ä–µ–∂–∏–º–∞ –æ—Ç–ª–∞–¥–∫–∏"""
        self.logger.setLevel(logging.DEBUG if enabled else logging.INFO)
        if enabled:
            self.start_timer()

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π –ª–æ–≥–≥–µ—Ä
logger = JoraLogger()

# –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–µ—Ç–æ–¥—ã –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
debug = logger.debug
info = logger.info
error = logger.error
set_debug = logger.set_debug
log_timing = logger.log_timing
