import os
import signal
import sys
import argparse
from detector import VoiceDetector
from recognizer import SpeechRecognizer
from stream_recognizer import StreamRecognizer
from commands import CommandProcessor

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
VOICE_SENSITIVITY = 0.5  # –ß—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–µ—Ç–µ–∫—Ç–æ—Ä–∞ —Ä–µ—á–∏ (0.0 - 1.0)
DICTATION_MODE = False  # –§–ª–∞–≥ —Ä–µ–∂–∏–º–∞ –¥–∏–∫—Ç–æ–≤–∫–∏

def parse_args():
    """–ü–∞—Ä—Å–∏–Ω–≥ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏"""
    parser = argparse.ArgumentParser(description='–ñ–æ—Ä–∞ - –≥–æ–ª–æ—Å–æ–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫')
    parser.add_argument('--debug', '-d',
                       action='store_true',
                       help='–í–∫–ª—é—á–∏—Ç—å —Ä–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏ —Å –∑–∞–ø–∏—Å—å—é –∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ–º –∞—É–¥–∏–æ')
    parser.add_argument('--sensitivity', '-s',
                       type=float,
                       default=VOICE_SENSITIVITY,
                       help='–ß—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–µ—Ç–µ–∫—Ç–æ—Ä–∞ —Ä–µ—á–∏ (0.0 - 1.0)')
    return parser.parse_args()

def check_env():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
    required = ['YANDEX_FOLDER_ID', 'YANDEX_OAUTH_TOKEN', 'YANDEX_API_KEY']
    missing = [var for var in required if not os.getenv(var)]

    if missing:
        print("‚ùå –ë—Ä–∞—Ç–∞–Ω, –Ω–µ—Ç –≤–∞–∂–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è:", ', '.join(missing))
        print("üí° –ü—Ä–æ–≤–µ—Ä—å shell.nix!")
        sys.exit(1)
    print("‚úÖ –í—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞ –º–µ—Å—Ç–µ!")

def signal_handler(sig, frame):
    """–ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–∏ Ctrl+C"""
    print("\nüëã –ü–æ–∫–∞, –±—Ä–∞—Ç–∞–Ω! –ó–∞–≤–µ—Ä—à–∞—é—Å—å...")
    sys.exit(0)

def start_dictation():
    """–†–µ–∂–∏–º –¥–∏–∫—Ç–æ–≤–∫–∏"""
    stream_recognizer = StreamRecognizer()
    print("üìù –ü–æ–≥–Ω–∞–ª–∏ –¥–∏–∫—Ç–æ–≤–∞—Ç—å! (–°–∫–∞–∂–∏ '–ó–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–ø–∏—Å—å' –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è)")

    while True:
        text = stream_recognizer.recognize_stream()
        if text == "STOP_RECORDING":
            break
        elif text:  # –ø–µ—á–∞—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å —á—Ç–æ –ø–µ—á–∞—Ç–∞—Ç—å
            print(f"üìù {text}")

def main():
    # –ü–∞—Ä—Å–∏–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã
    args = parse_args()

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è —Ä–µ–∂–∏–º–∞ –æ—Ç–ª–∞–¥–∫–∏
    if args.debug:
        os.environ["JORA_DEBUG"] = "1"
        print("üêõ –†–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏ –≤–∫–ª—é—á–µ–Ω!")

        # –°–æ–∑–¥–∞—ë–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –¥–µ–±–∞–≥ –∑–∞–ø–∏—Å–µ–π –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
        os.makedirs("debug_records", exist_ok=True)
    else:
        os.environ["JORA_DEBUG"] = "0"

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ
    check_env()

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ Ctrl+C
    signal.signal(signal.SIGINT, signal_handler)

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
    detector = VoiceDetector(sensitivity=args.sensitivity)
    recognizer = SpeechRecognizer()
    stream_recognizer = StreamRecognizer()
    command_processor = CommandProcessor()
    command_processor.set_stream_recognizer(stream_recognizer)

    print("üéß –ü–æ–≥–Ω–∞–ª–∏, –±—Ä–∞—Ç–∞–Ω! –°–ª—É—à–∞—é...")

    while True:
        if detector.is_speech():
            if not command_processor.is_dictating:
                # –û–±—ã—á–Ω—ã–π —Ä–µ–∂–∏–º - —Å–ª—É—à–∞–µ–º –∫–æ–º–∞–Ω–¥—ã
                print("üó£Ô∏è –û, —Å–ª—ã—à—É —Ä–µ—á—å!")
                text = recognizer.record_until_silence(detector)
                if text:
                    print(f"üëâ –¢—ã —Å–∫–∞–∑–∞–ª: {text}")
                    if command_processor.process(text):
                        continue
            else:
                # –†–µ–∂–∏–º –¥–∏–∫—Ç–æ–≤–∫–∏
                stream_recognizer.recognize_stream()
                if command_processor.is_dictating:
                    command_processor.is_dictating = False
                    print("\n‚úÖ –î–∏–∫—Ç–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")

if __name__ == "__main__":
    main()
