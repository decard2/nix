import os
import sys
import json
import time
from voice_listener import start_recording, process_audio
from command_executor import execute_command
from colors import Colors

def print_help():
    print(f"""
{Colors.HEADER}üé§ –ì–æ–ª–æ—Å–æ–≤–æ–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç{Colors.END}

{Colors.BLUE}–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:{Colors.END}
- "—Ç–µ–ª–µ–≥—Ä–∞–º" –∏–ª–∏ "—Ç–µ–ª–µ–≥–∞" - –æ—Ç–∫—Ä—ã—Ç—å Telegram
- "—Ç–µ—Ä–º–∏–Ω–∞–ª" –∏–ª–∏ "–∫–æ–Ω—Å–æ–ª—å" - –æ—Ç–∫—Ä—ã—Ç—å —Ç–µ—Ä–º–∏–Ω–∞–ª
- "—Ä–µ–¥–∞–∫—Ç–æ—Ä" –∏–ª–∏ "–∫–æ–¥–µ—Ä" - –æ—Ç–∫—Ä—ã—Ç—å —Ä–µ–¥–∞–∫—Ç–æ—Ä –∫–æ–¥–∞
- "–±—Ä–∞—É–∑–µ—Ä" - –æ—Ç–∫—Ä—ã—Ç—å –±—Ä–∞—É–∑–µ—Ä
- "–ø—Ä–æ—Ü–µ—Å—Å—ã" –∏–ª–∏ "–Ω–∞–≥—Ä—É–∑–∫–∞" - –æ—Ç–∫—Ä—ã—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä
- "–∑–∞–∫—Ä—ã—Ç—å" - –∑–∞–∫—Ä—ã—Ç—å –∞–∫—Ç–∏–≤–Ω–æ–µ –æ–∫–Ω–æ

{Colors.BLUE}–ù–∞–≤–∏–≥–∞—Ü–∏—è:{Colors.END}
- "–Ω–æ–º–µ—Ä" - –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É —Ä–∞–±–æ—á–∏–º–∏ —Å—Ç–æ–ª–∞–º–∏
- –ú–æ–∂–Ω–æ –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞—Ç—å: "—Ä–µ–¥–∞–∫—Ç–æ—Ä –¥–≤–∞"

{Colors.BLUE}–†–µ–∂–∏–º –¥–∏–∫—Ç–æ–≤–∫–∏:{Colors.END}
- "–∑–∞–ø–∏—Å—å" - –≤–∫–ª—é—á–∏—Ç—å —Ä–µ–∂–∏–º –¥–∏–∫—Ç–æ–≤–∫–∏
- "—Å—Ç–æ–ø" - –≤—ã–∫–ª—é—á–∏—Ç—å —Ä–µ–∂–∏–º –¥–∏–∫—Ç–æ–≤–∫–∏
    """)

def main():
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    stream, audio, ffmpeg_process = start_recording()
    print_help()
    print(f"{Colors.GREEN}üé§ –ì–æ–ª–æ—Å–æ–≤–æ–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –∑–∞–ø—É—â–µ–Ω{Colors.END}")

    # –ö—ç—à –¥–ª—è –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –∫–æ–º–∞–Ω–¥
    last_command = None
    last_command_time = 0
    COMMAND_COOLDOWN = 0.5  # –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª –º–µ–∂–¥—É –∫–æ–º–∞–Ω–¥–∞–º–∏

    # –§–ª–∞–≥ —Ä–µ–∂–∏–º–∞ –¥–∏–∫—Ç–æ–≤–∫–∏
    dictation_mode = False

    try:
        for result in process_audio():
            current_time = time.time()

            # –ü–∞—Ä—Å–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            try:
                text = json.loads(result)["text"].strip()
            except (json.JSONDecodeError, KeyError):
                continue

            # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—É—Å—Ç—ã–µ –∫–æ–º–∞–Ω–¥—ã
            if not text:
                continue

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—ã—Ö–æ–¥ –∏–∑ —Ä–µ–∂–∏–º–∞ –¥–∏–∫—Ç–æ–≤–∫–∏
            if dictation_mode and "—Å—Ç–æ–ø" in text.lower():
                print(f"{Colors.GREEN}‚úÖ –í—ã—Ö–æ–∂—É –∏–∑ —Ä–µ–∂–∏–º–∞ –¥–∏–∫—Ç–æ–≤–∫–∏{Colors.END}")
                dictation_mode = False
                continue

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–∞–Ω–¥—É –ø–æ–º–æ—â–∏
            if "–ø–æ–º–æ—â—å" in text.lower() and not dictation_mode:
                print_help()
                continue

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—É–ª–¥–∞—É–Ω –∏ –¥—É–±–ª–∏–∫–∞—Ç—ã (—Ç–æ–ª—å–∫–æ –¥–ª—è –æ–±—ã—á–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞)
            if not dictation_mode:
                if current_time - last_command_time < COMMAND_COOLDOWN:
                    continue
                if text == last_command:
                    continue

            # –í—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–º–∞–Ω–¥—É –∏–ª–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–∏–∫—Ç–æ–≤–∫—É
            try:
                print(f"\n{Colors.BLUE}üéØ {'–¢–µ–∫—Å—Ç' if dictation_mode else '–ö–æ–º–∞–Ω–¥–∞'}: '{text}'{Colors.END}")

                # –í—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–º–∞–Ω–¥—É –∏–ª–∏ –≤–≤–æ–¥–∏–º —Ç–µ–∫—Å—Ç
                result = execute_command(text, dictation_mode)

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤ —Ä–µ–∂–∏–º –¥–∏–∫—Ç–æ–≤–∫–∏
                if result == "DICTATION_MODE":
                    dictation_mode = True
                    print(f"{Colors.GREEN}‚úÖ –í–∫–ª—é—á–µ–Ω —Ä–µ–∂–∏–º –¥–∏–∫—Ç–æ–≤–∫–∏. –°–∫–∞–∂–∏—Ç–µ '—Å—Ç–æ–ø' –¥–ª—è –≤—ã—Ö–æ–¥–∞{Colors.END}")

                last_command = text
                last_command_time = current_time

            except Exception as e:
                print(f"{Colors.FAIL}‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {e}{Colors.END}")

    except KeyboardInterrupt:
        print(f"\n{Colors.WARNING}üëã –í—ã–∫–ª—é—á–∞—é—Å—å...{Colors.END}")
    finally:
        print(f"{Colors.WARNING}üßπ –û—Å–≤–æ–±–æ–∂–¥–∞—é —Ä–µ—Å—É—Ä—Å—ã...{Colors.END}")
        stream.stop_stream()
        stream.close()
        audio.terminate()
        ffmpeg_process.terminate()

if __name__ == "__main__":
    main()
