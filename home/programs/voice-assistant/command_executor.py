import os
import json
import subprocess
from colors import Colors

COMMAND_SYNONYMS = {
    "—Ç–µ–ª–µ–≥—Ä–∞–º": ["—Ç–µ–ª–µ–≥–∞", "—Ç–µ–ª–µ–≥—Ä–∞–º–º", "—Å–æ–æ–±—â–µ–Ω–∏—è"],
    "—Ç–µ—Ä–º–∏–Ω–∞–ª": ["–∫–æ–Ω—Å–æ–ª—å", "—à–µ–ª"],
    "—Ä–µ–¥–∞–∫—Ç–æ—Ä": ["–∫–æ–¥–µ—Ä", "–∏–¥—ç"],
    "–±—Ä–∞—É–∑–µ—Ä": ["–∏–Ω—Ç–µ—Ä–Ω–µ—Ç"],
    "–∑–∞–∫—Ä—ã—Ç—å": ["–≤—ã–∫–ª—é—á–∏—Ç—å"],
}

def normalize_command(text):
    text = text.lower()
    for main_word, synonyms in COMMAND_SYNONYMS.items():
        if any(syn in text for syn in synonyms):
            return text.replace(synonyms[0], main_word)
    return text

def check_workspace_exists(workspace_num):
    try:
        result = subprocess.run(['hyprctl', 'clients', '-j'], capture_output=True, text=True)
        clients = json.loads(result.stdout)
        return any(client.get('workspace', {}).get('id') == workspace_num for client in clients)
    except:
        return False

def extract_number(text):
    numbers = {
        "–æ–¥–∏–Ω": "1", "–¥–≤–∞": "2", "—Ç—Ä–∏": "3",
        "—á–µ—Ç—ã—Ä–µ": "4", "–ø—è—Ç—å": "5", "—à–µ—Å—Ç—å": "6",
        "—Å–µ–º—å": "7", "–≤–æ—Å–µ–º—å": "8", "–¥–µ–≤—è—Ç—å": "9"
    }

    for word, num in numbers.items():
        if word in text.lower():
            return num
    return None

def type_text(text):
    subprocess.run(['wtype', text + ' '])  # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–±–µ–ª –ø–æ—Å–ª–µ —Ç–µ–∫—Å—Ç–∞

def execute_command(text, dictation_mode=False):
    if dictation_mode:
        type_text(text)
        print(f"{Colors.GREEN}üìù –¢–µ–∫—Å—Ç –≤–≤–µ–¥—ë–Ω: '{text}'{Colors.END}")
        return

    text = normalize_command(text)
    workspace_num = extract_number(text)

    if "–∑–∞–ø–∏—Å—å" in text.lower():
        return "DICTATION_MODE"

    if "–∑–∞–∫—Ä—ã—Ç—å" in text.lower():
        command = "hyprctl dispatch killactive"
        print(f"{Colors.GREEN}üíÄ –ó–∞–∫—Ä—ã–≤–∞—é –∞–∫—Ç–∏–≤–Ω–æ–µ –æ–∫–Ω–æ{Colors.END}")
        os.system(command)
        return

    # –°–Ω–∞—á–∞–ª–∞ –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –Ω—É–∂–Ω—ã–π –≤–æ—Ä–∫—Å–ø–µ–π—Å, –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω
    if workspace_num:
        os.system(f"hyprctl dispatch workspace {workspace_num}")

    # Telegram
    if any(word in text.lower() for word in ["—Ç–µ–ª–µ–≥–∞", "—Ç–µ–ª–µ–≥—Ä–∞–º", "telegram"]):
        command = "hyprctl dispatch togglespecialworkspace telegram"
        print(f"{Colors.GREEN}üöÄ –û—Ç–∫—Ä—ã–≤–∞—é —Ç–µ–ª–µ–≥—É{Colors.END}")
        os.system(command)
        return

    # Terminal
    if any(word in text.lower() for word in ["—Ç–µ—Ä–º–∏–Ω–∞–ª", "–∫–æ–Ω—Å–æ–ª—å"]):
        command = "hyprctl dispatch togglespecialworkspace term"
        print(f"{Colors.GREEN}üöÄ –û—Ç–∫—Ä—ã–≤–∞—é —Ç–µ—Ä–º–∏–Ω–∞–ª{Colors.END}")
        os.system(command)
        return

    # System Monitor
    if any(word in text.lower() for word in ["–ø—Ä–æ—Ü–µ—Å—Å—ã", "–Ω–∞–≥—Ä—É–∑–∫–∞"]):
        command = "hyprctl dispatch togglespecialworkspace btop"
        print(f"{Colors.GREEN}üöÄ –û—Ç–∫—Ä—ã–≤–∞—é —Å–∏—Å—Ç–µ–º–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä{Colors.END}")
        os.system(command)
        return

    # Editor
    if "—Ä–µ–¥–∞–∫—Ç–æ—Ä" in text.lower() or "–∫–æ–¥–µ—Ä" in text.lower():
        target_workspace = workspace_num if workspace_num else "3"
        os.system(f"hyprctl dispatch workspace {target_workspace}")

        if not check_workspace_exists(int(target_workspace)):
            command = "zed &"
            print(f"{Colors.GREEN}üöÄ –ó–∞–ø—É—Å–∫–∞—é Zed –Ω–∞ —Ä–∞–±–æ—á–µ–º —Å—Ç–æ–ª–µ {target_workspace}{Colors.END}")
            os.system(command)
        else:
            print(f"{Colors.BLUE}üîç Zed —É–∂–µ –æ—Ç–∫—Ä—ã—Ç –Ω–∞ —Ä–∞–±–æ—á–µ–º —Å—Ç–æ–ª–µ {target_workspace}{Colors.END}")
        return

    # Browser
    if "–±—Ä–∞—É–∑–µ—Ä" in text:
        target_workspace = workspace_num if workspace_num else "4"
        os.system(f"hyprctl dispatch workspace {target_workspace}")

        if not check_workspace_exists(int(target_workspace)):
            command = "firefox &"
            print(f"{Colors.GREEN}üöÄ –ó–∞–ø—É—Å–∫–∞—é Firefox –Ω–∞ —Ä–∞–±–æ—á–µ–º —Å—Ç–æ–ª–µ {target_workspace}{Colors.END}")
            os.system(command)
        else:
            print(f"{Colors.BLUE}üîç –ë—Ä–∞—É–∑–µ—Ä —É–∂–µ –æ—Ç–∫—Ä—ã—Ç –Ω–∞ —Ä–∞–±–æ—á–µ–º —Å—Ç–æ–ª–µ {target_workspace}{Colors.END}")
        return

    # Just workspace switching
    if workspace_num:
        print(f"{Colors.GREEN}üöÄ –ü–µ—Ä–µ—Ö–æ–∂—É –Ω–∞ —Ä–∞–±–æ—á–∏–π —Å—Ç–æ–ª {workspace_num}{Colors.END}")
        return
